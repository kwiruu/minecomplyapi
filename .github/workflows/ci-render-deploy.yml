name: CI and Deploy to Render

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    # If your tests need Postgres, uncomment the "services" block below and adjust env/ports.
    # services:
    #   postgres:
    #     image: postgres:15
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: testdb
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd="pg_isready -U postgres"
    #       --health-interval=10s
    #       --health-timeout=5s
    #       --health-retries=5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      # If you compile TypeScript before tests, you can add: npm run build
      - name: Run tests
        run: npm test -- --ci

  deploy:
    name: Trigger Render deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: production
      # Optionally set a URL for this environment (e.g., your Render service URL)
      # url: https://your-service.onrender.com
    steps:
      - name: Trigger Render Deploy Hook
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
        run: |
          if [ -z "$RENDER_DEPLOY_HOOK" ]; then
            echo "Missing secret RENDER_DEPLOY_HOOK"; exit 1;
          fi
          echo "Triggering Render deploy..."
          curl -fsSL -X POST "$RENDER_DEPLOY_HOOK"
          echo "Deploy triggered."